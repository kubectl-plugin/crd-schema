{
  "description": "GCPBackendPolicy provides a way to apply LoadBalancer policy configuration with\nthe GKE implementation of the Gateway API.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Spec defines the desired state of GCPBackendPolicy.",
      "properties": {
        "default": {
          "description": "Default defines default policy configuration for the targeted resource.",
          "properties": {
            "backendPreference": {
              "description": "BackendPreference indicates whether the backend should be fully\nutilized before sending traffic to backends with default preference.\nCan only be configured for multi-cluster service backends when\nGCPBackendPolicy targets ServiceExport.\nThe default value is DEFAULT.",
              "enum": [
                "DEFAULT",
                "PREFERRED"
              ],
              "type": "string"
            },
            "balancingMode": {
              "description": "BalancingMode specifies how to determine whether the backend of a load balancer can handle\nadditional traffic or is fully loaded.\nCan be set as RATE, UTILIZATION or CUSTOM_METRICS.",
              "enum": [
                "RATE",
                "UTILIZATION",
                "CUSTOM_METRICS"
              ],
              "type": "string"
            },
            "capacityScalerPercent": {
              "description": "CapacityScalerPercent is a multiplier applied to the backend's target capacity of its balancing\nmode. The field is a percentage value in the range [0, 100] with the default value being 100.\nThis means the group serves up to 100% of its configured capacity (depending on balancingMode).\nA setting of 0 means the group is completely drained, offering 0% of its available capacity.",
              "format": "int64",
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "connectionDraining": {
              "description": "ConnectionDraining contains configuration for connection draining",
              "properties": {
                "drainingTimeoutSec": {
                  "description": "DrainingTimeoutSec is a BackendService parameter.\nIt is used during removal of VMs from instance groups. This guarantees that for\nthe specified time all existing connections to a VM will remain untouched,\nbut no new connections will be accepted. Set timeout to zero to disable\nconnection draining. Enable the feature by specifying a timeout of up to\none hour. If the field is omitted, a default value (0s) will be used.\nSee https://cloud.google.com/compute/docs/reference/rest/v1/backendServices",
                  "format": "int64",
                  "maximum": 3600,
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "customMetrics": {
              "description": "CustomMetrics contains configuration for custom backend load reporting metrics.",
              "items": {
                "description": "CustomMetricsConfig contains configuration for custom backend load reporting metrics.",
                "properties": {
                  "dryRun": {
                    "description": "DryRun specifies whether the metric should be used to determine load of the backend.",
                    "type": "boolean"
                  },
                  "maxUtilizationPercent": {
                    "description": "MaxUtilizationPercent specifies a target capacity for the Custom Metrics utilization balancing mode.\nDefault value for GCE resource is 80.",
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "Specifies the name associated with the custom metric.",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z]([-_.a-z0-9]*[a-z0-9])?$",
                    "type": "string"
                  }
                },
                "required": [
                  "dryRun",
                  "name"
                ],
                "type": "object"
              },
              "maxItems": 2,
              "type": "array"
            },
            "iap": {
              "description": "IAP contains the configurations for Identity-Aware Proxy.\nSee https://cloud.google.com/compute/docs/reference/rest/v1/backendServices\nIdentity-Aware Proxy manages access control policies for backend services associated with a HTTPRoute,\nso they can be accessed only by authenticated users or applications with correct Identity and Access Management (IAM) role.",
              "properties": {
                "clientID": {
                  "description": "ClientID is the OAuth2 client ID to use for the authentication flow.\nSee iap.oauth2ClientId in https://cloud.google.com/compute/docs/reference/rest/v1/backendServices\nTo use a custom OAuth client, provide both ClientID and Oauth2ClientSecret. If neither is provided, Google managed OAuth is the default.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Enabled denotes whether the serving infrastructure will authenticate and authorize all incoming requests.\nIf true, the ClientID and Oauth2ClientSecret fields must be non-empty.\nIf not specified, this defaults to false, which means Identity-Aware Proxy is disabled by default.",
                  "type": "boolean"
                },
                "oauth2ClientSecret": {
                  "description": "Oauth2ClientSecret contains the OAuth2 client secret to use for the authentication flow.\nTo use a custom OAuth client, provide both ClientID and Oauth2ClientSecret. If neither is provided, Google managed OAuth is the default.",
                  "properties": {
                    "name": {
                      "description": "Name is the reference to the secret resource.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "logging": {
              "description": "LoggingConfig contains configuration for logging.",
              "properties": {
                "enabled": {
                  "description": "Enabled denotes whether to enable logging for the load balancer traffic\nserved by this backend service. If not specified, this defaults to false,\nwhich means logging is disabled by default.",
                  "type": "boolean"
                },
                "optionalFields": {
                  "description": "List of optional fields to include in the log entries (such as\n\"tls.cipher\" or \"orca_load_report\", for example).",
                  "items": {
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z]([-_.a-z0-9]*[a-z0-9])?$",
                    "type": "string"
                  },
                  "maxItems": 30,
                  "type": "array"
                },
                "optionalMode": {
                  "description": "Specifies whether to log all optional fields, none, or a subset configured\nby the optionalFields.",
                  "enum": [
                    "EXCLUDE_ALL_OPTIONAL",
                    "INCLUDE_ALL_OPTIONAL",
                    "CUSTOM"
                  ],
                  "type": "string"
                },
                "sampleRate": {
                  "description": "This field can only be specified if logging is enabled for this backend\nservice. The value of the field must be in range [0, 1e6]. This is\nconverted to a floating point value in the range [0, 1] by dividing by 1e6\nfor use with the GCE api and interpreted as the proportion of requests that\nwill be logged. By default all requests will be logged.",
                  "format": "int32",
                  "maximum": 1000000,
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "maxRatePerEndpoint": {
              "description": "MaxRatePerEndpoint configures the target capacity for backends.\nIf the field is omitted, a default value (1e8) will be used.\nIn the future we may add selector based settings for MaxRatePerEndpoint but they will co-exist",
              "format": "int64",
              "maximum": 1000000000,
              "minimum": 1,
              "type": "integer"
            },
            "scopes": {
              "description": "Scopes contains LoadBalancer policy configuration per cluster.",
              "items": {
                "description": "GCPBackendScopePolicyConfig contains LoadBalancer policy configuration scoped based on the\nselector labels.\nThe first scope that matches all the selectors will be applied.",
                "properties": {
                  "backendPreference": {
                    "description": "BackendPreference indicates whether the backend should be fully\nutilized before sending traffic to backends with default preference.\nCan only be configured for multi-cluster service backends when\nGCPBackendPolicy targets ServiceExport.\nThe default value is DEFAULT.\nCannot be specified if the top-level(default) backendPreference is specified.",
                    "enum": [
                      "DEFAULT",
                      "PREFERRED"
                    ],
                    "type": "string"
                  },
                  "balancingMode": {
                    "description": "BalancingMode specifies how to determine whether the backend of a load balancer can handle\nadditional traffic or is fully loaded.\nCan be set as RATE, UTILIZATION or CUSTOM_METRICS.",
                    "enum": [
                      "RATE",
                      "UTILIZATION",
                      "CUSTOM_METRICS"
                    ],
                    "type": "string"
                  },
                  "capacityScalerPercent": {
                    "description": "CapacityScalerPercent is a multiplier applied to the backend's target capacity of its balancing\nmode. The field is a percentage value in the range [0, 100] with the default value being 100.\nThis means the group serves up to 100% of its configured capacity (depending on balancingMode).\nA setting of 0 means the group is completely drained, offering 0% of its available capacity.",
                    "format": "int64",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "customMetrics": {
                    "description": "CustomMetrics contains configuration for custom backend load reporting metrics.",
                    "items": {
                      "description": "CustomMetricsConfig contains configuration for custom backend load reporting metrics.",
                      "properties": {
                        "dryRun": {
                          "description": "DryRun specifies whether the metric should be used to determine load of the backend.",
                          "type": "boolean"
                        },
                        "maxUtilizationPercent": {
                          "description": "MaxUtilizationPercent specifies a target capacity for the Custom Metrics utilization balancing mode.\nDefault value for GCE resource is 80.",
                          "format": "int32",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "Specifies the name associated with the custom metric.",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-z]([-_.a-z0-9]*[a-z0-9])?$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "dryRun",
                        "name"
                      ],
                      "type": "object"
                    },
                    "maxItems": 2,
                    "type": "array"
                  },
                  "maxRatePerEndpoint": {
                    "description": "MaxRatePerEndpoint configures the target capacity for backends.\nIf the field is omitted, a default value (1e8) will be used.\nCannot be specified if the top-level(default) maxRatePerEndpoint is specified.",
                    "format": "int64",
                    "maximum": 1000000000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "selector": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Selector is a map of labels that identifies the backend service to apply the policy to.",
                    "maxProperties": 4,
                    "type": "object",
                    "x-kubernetes-validations": [
                      {
                        "message": "The selector key can only be one of gke.io/zone, gke.io/region or gke.io/cluster-name.",
                        "rule": "self.all(k, k == 'gke.io/zone' || k == 'gke.io/region' || k == 'gke.io/cluster-name')"
                      },
                      {
                        "message": "The maximum length of the selector value should not exceed 30",
                        "rule": "self.all(k, !(self[k].size() \u003e 30))"
                      }
                    ]
                  }
                },
                "type": "object"
              },
              "maxItems": 16,
              "type": "array"
            },
            "securityPolicy": {
              "description": "SecurityPolicy is a reference to a GCP Cloud Armor SecurityPolicy resource.",
              "type": "string"
            },
            "sessionAffinity": {
              "description": "SessionAffinityConfig contains configuration for stickiness parameters.",
              "properties": {
                "cookieTtlSec": {
                  "description": "CookieTTLSec specifies the lifetime of cookies in seconds. This setting\nrequires GENERATED_COOKIE or HTTP_COOKIE session affinity. If set to 0, the\ncookie is non-persistent and lasts only until the end of the browser\nsession (or equivalent). The maximum allowed value is two weeks\n(1,209,600).",
                  "format": "int64",
                  "maximum": 1209600,
                  "minimum": 0,
                  "type": "integer"
                },
                "type": {
                  "description": "Type specifies the type of session affinity to use. If not specified, this\ndefaults to NONE.",
                  "enum": [
                    "CLIENT_IP",
                    "CLIENT_IP_PORT_PROTO",
                    "CLIENT_IP_PROTO",
                    "GENERATED_COOKIE",
                    "HEADER_FIELD",
                    "HTTP_COOKIE",
                    "NONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "timeoutSec": {
              "description": "TimeoutSec is a BackendService parameter.\nSee https://cloud.google.com/compute/docs/reference/rest/v1/backendServices.\nIf the field is omitted, a default value (30s) will be used.",
              "format": "int64",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "capacityScalerPercent cannot be specified for both default and scopes fields",
              "rule": "!(has(self.scopes) \u0026\u0026 self.scopes.exists(s, has(s.capacityScalerPercent)) \u0026\u0026 has(self.capacityScalerPercent))"
            },
            {
              "message": "maxRatePerEndpoint cannot be specified for both default and scopes fields",
              "rule": "!(has(self.scopes) \u0026\u0026 self.scopes.exists(s, has(s.maxRatePerEndpoint)) \u0026\u0026 has(self.maxRatePerEndpoint))"
            },
            {
              "message": "balancingMode cannot be specified for both default and scopes fields",
              "rule": "!(has(self.scopes) \u0026\u0026 self.scopes.exists(s, has(s.balancingMode)) \u0026\u0026 has(self.balancingMode))"
            },
            {
              "message": "backendPreference cannot be specified for both default and scopes fields",
              "rule": "!(has(self.scopes) \u0026\u0026 self.scopes.exists(s, has(s.backendPreference)) \u0026\u0026 has(self.backendPreference))"
            },
            {
              "message": "customMetrics cannot be specified for both default and scopes fields",
              "rule": "!(has(self.scopes) \u0026\u0026 self.scopes.exists(s, has(s.customMetrics)) \u0026\u0026 has(self.customMetrics))"
            }
          ]
        },
        "targetRef": {
          "description": "TargetRef identifies an API object to apply policy to.",
          "properties": {
            "group": {
              "description": "Group is the group of the target resource.",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
              "type": "string"
            },
            "kind": {
              "description": "Kind is kind of the target resource.",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the target resource.",
              "maxLength": 253,
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the referent. When unspecified, the local\nnamespace is inferred. Even when policy targets a resource in a different\nnamespace, it MUST only apply to traffic originating from the same\nnamespace as the policy.",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            }
          },
          "required": [
            "group",
            "kind",
            "name"
          ],
          "type": "object"
        }
      },
      "required": [
        "targetRef"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "Scopes can only be configured for ServiceImport and InferencePoolImport targets",
          "rule": "(self.targetRef.kind == 'InferencePoolImport' || self.targetRef.kind == 'ServiceImport') || !has(self.default.scopes)"
        },
        {
          "message": "sessionAffinity cannot be configured for InferencePool and InferencePoolImport targets",
          "rule": "(self.targetRef.kind != 'InferencePool' \u0026\u0026 self.targetRef.kind != 'InferencePoolImport') || !has(self.default.sessionAffinity)"
        }
      ]
    },
    "status": {
      "description": "Status defines the current state of GCPBackendPolicy.",
      "properties": {
        "ancestors": {
          "description": "Ancestors is a list of ancestor resources (usually Gateways) that are\nassociated with the policy, and the status of the policy with respect to\neach ancestor.",
          "items": {
            "description": "PolicyAncestorStatus describes the status of a route with respect to an\nassociated Ancestor.\n\n\nAncestors refer to objects that are either the Target of a policy or above it\nin terms of object hierarchy. For example, if a policy targets a Service, the\nPolicy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and\nthe GatewayClass. Almost always, in this hierarchy, the Gateway will be the most\nuseful object to place Policy status on, so we recommend that implementations\nSHOULD use Gateway as the PolicyAncestorStatus object unless the designers\nhave a _very_ good reason otherwise.\n\n\nIn the context of policy attachment, the Ancestor is used to distinguish which\nresource results in a distinct application of this policy. For example, if a policy\ntargets a Service, it may have a distinct result per attached Gateway.\n\n\nPolicies targeting the same resource may have different effects depending on the\nancestors of those resources. For example, different Gateways targeting the same\nService may have different capabilities, especially if they have different underlying\nimplementations.\n\n\nFor example, in BackendTLSPolicy, the Policy attaches to a Service that is\nused as a backend in a HTTPRoute that is itself attached to a Gateway.\nIn this case, the relevant object for status is the Gateway, and that is the\nancestor object referred to in this status.\n\n\nNote that a parent is also an ancestor, so for objects where the parent is the\nrelevant object for status, this struct SHOULD still be used.\n\n\nThis struct is intended to be used in a slice that's effectively a map,\nwith a composite key made up of the AncestorRef and the ControllerName.",
            "properties": {
              "ancestorRef": {
                "description": "AncestorRef corresponds with a ParentRef in the spec that this\nPolicyAncestorStatus struct describes the status of.",
                "properties": {
                  "group": {
                    "default": "gateway.networking.k8s.io",
                    "description": "Group is the group of the referent.\nWhen unspecified, \"gateway.networking.k8s.io\" is inferred.\nTo set the core API group (such as for a \"Service\" kind referent),\nGroup must be explicitly set to \"\" (empty string).\n\n\nSupport: Core",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  },
                  "kind": {
                    "default": "Gateway",
                    "description": "Kind is kind of the referent.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nSupport for other resources is Implementation-Specific.",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the referent.\n\n\nSupport: Core",
                    "maxLength": 253,
                    "minLength": 1,
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the referent. When unspecified, this refers\nto the local namespace of the Route.\n\n\nNote that there are specific rules for ParentRefs which cross namespace\nboundaries. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example:\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable any other kind of cross-namespace reference.\n\n\n\u003cgateway:experimental:description\u003e\nParentRefs from a Route to a Service in the same namespace are \"producer\"\nroutes, which apply default routing rules to inbound connections from\nany namespace to the Service.\n\n\nParentRefs from a Route to a Service in a different namespace are\n\"consumer\" routes, and these routing rules are only applied to outbound\nconnections originating from the same namespace as the Route, for which\nthe intended destination of the connections are a Service targeted as a\nParentRef of the Route.\n\u003c/gateway:experimental:description\u003e\n\n\nSupport: Core",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                    "type": "string"
                  },
                  "port": {
                    "description": "Port is the network port this Route targets. It can be interpreted\ndifferently based on the type of parent resource.\n\n\nWhen the parent resource is a Gateway, this targets all listeners\nlistening on the specified port that also support this kind of Route(and\nselect this Route). It's not recommended to set `Port` unless the\nnetworking behaviors specified in a Route must apply to a specific port\nas opposed to a listener(s) whose port(s) may be changed. When both Port\nand SectionName are specified, the name and port of the selected listener\nmust match both specified values.\n\n\n\u003cgateway:experimental:description\u003e\nWhen the parent resource is a Service, this targets a specific port in the\nService spec. When both Port (experimental) and SectionName are specified,\nthe name and port of the selected port must match both specified values.\n\u003c/gateway:experimental:description\u003e\n\n\nImplementations MAY choose to support other parent resources.\nImplementations supporting other types of parent resources MUST clearly\ndocument how/if Port is interpreted.\n\n\nFor the purpose of status, an attachment is considered successful as\nlong as the parent resource accepts it partially. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment\nfrom the referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route,\nthe Route MUST be considered detached from the Gateway.\n\n\nSupport: Extended",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "sectionName": {
                    "description": "SectionName is the name of a section within the target resource. In the\nfollowing resources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n* Service: Port name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n\n\nImplementations MAY choose to support attaching Routes to other resources.\nIf that is the case, they MUST clearly document how SectionName is\ninterpreted.\n\n\nWhen unspecified (empty string), this will reference the entire resource.\nFor the purpose of status, an attachment is considered successful if at\nleast one section in the parent resource accepts it. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment from\nthe referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route, the\nRoute MUST be considered detached from the Gateway.\n\n\nSupport: Core",
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "conditions": {
                "description": "Conditions describes the status of the Policy with respect to the given Ancestor.",
                "items": {
                  "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
                  "properties": {
                    "lastTransitionTime": {
                      "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "message": {
                      "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                      "maxLength": 32768,
                      "type": "string"
                    },
                    "observedGeneration": {
                      "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                      "format": "int64",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "reason": {
                      "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "type": "object"
                },
                "maxItems": 8,
                "minItems": 1,
                "type": "array",
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "controllerName": {
                "description": "ControllerName is a domain/path string that indicates the name of the\ncontroller that wrote this status. This corresponds with the\ncontrollerName field on GatewayClass.\n\n\nExample: \"example.net/gateway-controller\".\n\n\nThe format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are\nvalid Kubernetes names\n(https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n\n\nControllers MUST populate this field when writing status. Controllers should ensure that\nentries to status populated with their ControllerName are cleaned up when they are no\nlonger necessary.",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$",
                "type": "string"
              }
            },
            "required": [
              "ancestorRef",
              "controllerName"
            ],
            "type": "object"
          },
          "maxItems": 16,
          "type": "array"
        },
        "conditions": {
          "description": "Conditions describe the current conditions of the GCPBackendPolicy.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "maxItems": 8,
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
