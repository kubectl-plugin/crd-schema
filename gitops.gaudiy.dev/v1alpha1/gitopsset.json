{
  "description": "GitOpsSet represents a Flux GitOps Toolkit engine set.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Spec defines the desired state of GitOpsSet.",
      "properties": {
        "generators": {
          "description": "Generators generate the data to be inserted into the provided templates.",
          "items": {
            "description": "GitOpsSetGenerator is the top-level set of generators for this GitOpsSet.",
            "properties": {
              "apiClient": {
                "description": "APIClientGenerator defines a generator that queries an API endpoint and uses that to generate data.",
                "properties": {
                  "body": {
                    "description": "Body is set as the body in a POST request.\nIf set, this will configure the Method to be POST automatically.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "endpoint": {
                    "description": "This is the API endpoint to use.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "headersRef": {
                    "description": "HeadersRef allows optional configuration of a Secret or ConfigMap to add additional headers to an outgoing request.\nFor example, a Secret with a key Authorization: Bearer abc123 could be used to configure an authorization header.",
                    "properties": {
                      "kind": {
                        "description": "The resource kind to get headers from.",
                        "enum": [
                          "ConfigMap",
                          "Secret"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the resource in the same namespace to apply headers from.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "name"
                    ],
                    "type": "object"
                  },
                  "interval": {
                    "default": "5m",
                    "description": "The interval at which to poll the API endpoint.",
                    "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
                    "type": "string"
                  },
                  "jsonPath": {
                    "description": "JSONPath is string that is used to modify the result of the API call.\nThis can be used to extract a repeating element from a response.\nhttps://web.archive.org/web/20240208004059/\nhttps://kubernetes.io/docs/reference/kubectl/jsonpath/",
                    "minLength": 1,
                    "type": "string"
                  },
                  "method": {
                    "description": "Method defines the HTTP method to use to talk to the endpoint.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "Reference to Secret in same namespace with a field “caFile” which provides the Certificate Authority to trust when making API calls.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "singleElement": {
                    "description": "SingleElement means generate a single element with the result of the API call.\nWhen true, the response must be a JSON object and will be returned as a single element, i.e. only one element will be generated containing the entire object.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "jsonPath",
                  "method",
                  "secretRef"
                ],
                "type": "object"
              },
              "cluster": {
                "description": "ClusterGenerator defines a generator that queries the cluster API for relevant clusters.",
                "properties": {
                  "selector": {
                    "description": "Selector is used to filter the clusters that you want to target.\nIf no selector is provided, no clusters will be matched.",
                    "properties": {
                      "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "properties": {
                            "key": {
                              "description": "key is the label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "key",
                            "operator"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "type": "object"
              },
              "config": {
                "description": "ConfigGenerator loads a referenced ConfigMap or Secret from the Cluster and makes it available as a resource.",
                "properties": {
                  "kind": {
                    "description": "Kind of the referent.",
                    "enum": [
                      "ConfigMap",
                      "Secret"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "gRPCClient": {
                "description": "GRPCClientGenerator defines a generator that call a gRPC endpoint.",
                "properties": {
                  "endpoint": {
                    "description": "Endpoint is the gRPC endpoint to use.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "message": {
                    "description": "Message is set as the message in a gRPC request.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "method": {
                    "description": "Method defines the gRPC full method to use to call to the endpoint.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "retryCount": {
                    "default": 3,
                    "description": "RetryCount is the retry count for gRPC call.",
                    "type": "integer"
                  }
                },
                "required": [
                  "endpoint",
                  "message",
                  "method"
                ],
                "type": "object"
              },
              "gitRepository": {
                "description": "GitRepositoryGenerator generates from files in a Flux GitRepository resource.",
                "properties": {
                  "directories": {
                    "description": "Directories is a set of rules for identifying directories to be generated.",
                    "items": {
                      "description": "RepositoryGeneratorDirectoryItem stores the information about a specific directory to be generated from.",
                      "properties": {
                        "exclude": {
                          "description": "Exclude is whether the excludes [Path] directory.",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "Path is the name of a directory to read and generate from can be JSON or YAML.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "path"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "files": {
                    "description": "Files is a set of rules for identifying files to be parsed.",
                    "items": {
                      "description": "RepositoryGeneratorFileItem defines a path to a file to be parsed when generating.",
                      "properties": {
                        "path": {
                          "description": "Path is the name of a file to read and generate from can be JSON or YAML.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "path"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "repositoryRef": {
                    "description": "RepositoryRef is the name of a GitRepository resource to be generated from.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "repositoryRef"
                ],
                "type": "object"
              },
              "imagePolicy": {
                "description": "ImagePolicyGenerator generates from the ImagePolicy.",
                "properties": {
                  "policyRef": {
                    "description": "PolicyRef is the name of a ImagePolicy resource to be generated from.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "imageRepository": {
                "description": "ImageRepositoryGenerator generates from the ImageRepository.",
                "properties": {
                  "images": {
                    "description": "Images is the name of the image repository.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "interval": {
                    "default": "5m",
                    "description": "Interval is the interval at which to check for repository updates.",
                    "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
                    "type": "string"
                  },
                  "serviceAccountName": {
                    "description": "ServiceAccountName is the name of the Kubernetes service account to impersonate when reconciling this search Images.",
                    "type": "string"
                  }
                },
                "required": [
                  "images"
                ],
                "type": "object"
              },
              "list": {
                "description": "ListGenerator generates from a hard-coded list.",
                "properties": {
                  "elements": {
                    "items": {
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "type": "array",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "required": [
                  "elements"
                ],
                "type": "object"
              },
              "matrix": {
                "description": "MatrixGenerator defines a matrix that combines generators. The matrix is a cartesian product of the generators.",
                "properties": {
                  "generators": {
                    "description": "Generators generate the data to be inserted into the provided templates.",
                    "items": {
                      "description": "GitOpsSetNestedGenerator describes the generators usable by the MatrixGenerator.",
                      "properties": {
                        "apiClient": {
                          "description": "APIClientGenerator defines a generator that queries an API endpoint and uses that to generate data.",
                          "properties": {
                            "body": {
                              "description": "Body is set as the body in a POST request.\nIf set, this will configure the Method to be POST automatically.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "endpoint": {
                              "description": "This is the API endpoint to use.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "headersRef": {
                              "description": "HeadersRef allows optional configuration of a Secret or ConfigMap to add additional headers to an outgoing request.\nFor example, a Secret with a key Authorization: Bearer abc123 could be used to configure an authorization header.",
                              "properties": {
                                "kind": {
                                  "description": "The resource kind to get headers from.",
                                  "enum": [
                                    "ConfigMap",
                                    "Secret"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the resource in the same namespace to apply headers from.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            },
                            "interval": {
                              "default": "5m",
                              "description": "The interval at which to poll the API endpoint.",
                              "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
                              "type": "string"
                            },
                            "jsonPath": {
                              "description": "JSONPath is string that is used to modify the result of the API call.\nThis can be used to extract a repeating element from a response.\nhttps://web.archive.org/web/20240208004059/\nhttps://kubernetes.io/docs/reference/kubectl/jsonpath/",
                              "minLength": 1,
                              "type": "string"
                            },
                            "method": {
                              "description": "Method defines the HTTP method to use to talk to the endpoint.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Reference to Secret in same namespace with a field “caFile” which provides the Certificate Authority to trust when making API calls.",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "singleElement": {
                              "description": "SingleElement means generate a single element with the result of the API call.\nWhen true, the response must be a JSON object and will be returned as a single element, i.e. only one element will be generated containing the entire object.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "jsonPath",
                            "method",
                            "secretRef"
                          ],
                          "type": "object"
                        },
                        "cluster": {
                          "description": "ClusterGenerator defines a generator that queries the cluster API for relevant clusters.",
                          "properties": {
                            "selector": {
                              "description": "Selector is used to filter the clusters that you want to target.\nIf no selector is provided, no clusters will be matched.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object"
                                }
                              },
                              "type": "object",
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "type": "object"
                        },
                        "config": {
                          "description": "ConfigGenerator loads a referenced ConfigMap or Secret from the Cluster and makes it available as a resource.",
                          "properties": {
                            "kind": {
                              "description": "Kind of the referent.",
                              "enum": [
                                "ConfigMap",
                                "Secret"
                              ],
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "kind",
                            "name"
                          ],
                          "type": "object"
                        },
                        "gRPCClient": {
                          "description": "GRPCClientGenerator defines a generator that call a gRPC endpoint.",
                          "properties": {
                            "endpoint": {
                              "description": "Endpoint is the gRPC endpoint to use.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "message": {
                              "description": "Message is set as the message in a gRPC request.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "method": {
                              "description": "Method defines the gRPC full method to use to call to the endpoint.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "retryCount": {
                              "default": 3,
                              "description": "RetryCount is the retry count for gRPC call.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "endpoint",
                            "message",
                            "method"
                          ],
                          "type": "object"
                        },
                        "gitRepository": {
                          "description": "GitRepositoryGenerator generates from files in a Flux GitRepository resource.",
                          "properties": {
                            "directories": {
                              "description": "Directories is a set of rules for identifying directories to be generated.",
                              "items": {
                                "description": "RepositoryGeneratorDirectoryItem stores the information about a specific directory to be generated from.",
                                "properties": {
                                  "exclude": {
                                    "description": "Exclude is whether the excludes [Path] directory.",
                                    "type": "boolean"
                                  },
                                  "path": {
                                    "description": "Path is the name of a directory to read and generate from can be JSON or YAML.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "files": {
                              "description": "Files is a set of rules for identifying files to be parsed.",
                              "items": {
                                "description": "RepositoryGeneratorFileItem defines a path to a file to be parsed when generating.",
                                "properties": {
                                  "path": {
                                    "description": "Path is the name of a file to read and generate from can be JSON or YAML.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "repositoryRef": {
                              "description": "RepositoryRef is the name of a GitRepository resource to be generated from.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "repositoryRef"
                          ],
                          "type": "object"
                        },
                        "imagePolicy": {
                          "description": "ImagePolicyGenerator generates from the ImagePolicy.",
                          "properties": {
                            "policyRef": {
                              "description": "PolicyRef is the name of a ImagePolicy resource to be generated from.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "imageRepository": {
                          "description": "ImageRepositoryGenerator generates from the ImageRepository.",
                          "properties": {
                            "images": {
                              "description": "Images is the name of the image repository.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "interval": {
                              "default": "5m",
                              "description": "Interval is the interval at which to check for repository updates.",
                              "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
                              "type": "string"
                            },
                            "serviceAccountName": {
                              "description": "ServiceAccountName is the name of the Kubernetes service account to impersonate when reconciling this search Images.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "images"
                          ],
                          "type": "object"
                        },
                        "list": {
                          "description": "ListGenerator generates from a hard-coded list.",
                          "properties": {
                            "elements": {
                              "items": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "type": "array",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "required": [
                            "elements"
                          ],
                          "type": "object"
                        },
                        "name": {
                          "description": "Name is an optional field that will be used to prefix the values generated by the nested generators,\nthis allows multiple generators of the same type in a single Matrix generator.",
                          "type": "string"
                        },
                        "ociRepository": {
                          "description": "OCIRepositoryGenerator generates from files in a Flux OCIRepository resource.",
                          "properties": {
                            "directories": {
                              "description": "Directories is a set of rules for identifying directories to be generated.",
                              "items": {
                                "description": "RepositoryGeneratorDirectoryItem stores the information about a specific directory to be generated from.",
                                "properties": {
                                  "exclude": {
                                    "description": "Exclude is whether the excludes [Path] directory.",
                                    "type": "boolean"
                                  },
                                  "path": {
                                    "description": "Path is the name of a directory to read and generate from can be JSON or YAML.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "files": {
                              "description": "Files is a set of rules for identifying files to be parsed.",
                              "items": {
                                "description": "RepositoryGeneratorFileItem defines a path to a file to be parsed when generating.",
                                "properties": {
                                  "path": {
                                    "description": "Path is the name of a file to read and generate from can be JSON or YAML.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "repositoryRef": {
                              "description": "RepositoryRef is the name of a OCIRepository resource to be generated from.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "repositoryRef"
                          ],
                          "type": "object"
                        },
                        "pullRequests": {
                          "description": "PullRequestGenerator defines a generator that queries a Git hosting service for relevant PRs.\n\n\nTODO(zchee): only supports github driver for now.",
                          "properties": {
                            "driver": {
                              "description": "Driver is the determines which git-api protocol to use.",
                              "enum": [
                                "github"
                              ],
                              "type": "string"
                            },
                            "forks": {
                              "description": "Fork is used to filter out forks from the target PRs if false, or to include forks if true.",
                              "type": "boolean"
                            },
                            "ignoreLabels": {
                              "description": "IgnoreLabels is used to filter PRs to exclude.",
                              "items": {
                                "description": "String represents textual data as UTF-8 character sequences.\nThis type is most often used by GraphQL to represent free-form\nhuman-readable text.",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "interval": {
                              "default": "5m",
                              "description": "Interval is the interval at which to check for repository updates.",
                              "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
                              "type": "string"
                            },
                            "labels": {
                              "description": "Labels are used to filter the PRs they want to target. This may apply to the server.",
                              "items": {
                                "description": "String represents textual data as UTF-8 character sequences.\nThis type is most often used by GraphQL to represent free-form\nhuman-readable text.",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "repo": {
                              "description": "Repo should be the Repo you want to query. e.g. my-org/my-repo.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "SecretRef is the reference to Secret in same namespace with a field “password” which is an auth token that can query the Git Provider API.",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "serverURL": {
                              "description": "ServerURL is the API endpoint to use.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "driver",
                            "labels",
                            "repo"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "singleElement": {
                    "description": "SingleElement means generate a single element with the result of the merged generator elements.\nWhen true, the matrix elements will be merged to a single element, with whatever prefixes they have.\nIt’s recommended that you use the Name field to separate out elements.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "generators"
                ],
                "type": "object"
              },
              "ociRepository": {
                "description": "OCIRepositoryGenerator generates from files in a Flux OCIRepository resource.",
                "properties": {
                  "directories": {
                    "description": "Directories is a set of rules for identifying directories to be generated.",
                    "items": {
                      "description": "RepositoryGeneratorDirectoryItem stores the information about a specific directory to be generated from.",
                      "properties": {
                        "exclude": {
                          "description": "Exclude is whether the excludes [Path] directory.",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "Path is the name of a directory to read and generate from can be JSON or YAML.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "path"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "files": {
                    "description": "Files is a set of rules for identifying files to be parsed.",
                    "items": {
                      "description": "RepositoryGeneratorFileItem defines a path to a file to be parsed when generating.",
                      "properties": {
                        "path": {
                          "description": "Path is the name of a file to read and generate from can be JSON or YAML.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "path"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "repositoryRef": {
                    "description": "RepositoryRef is the name of a OCIRepository resource to be generated from.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "repositoryRef"
                ],
                "type": "object"
              },
              "pullRequests": {
                "description": "PullRequestGenerator defines a generator that queries a Git hosting service for relevant PRs.\n\n\nTODO(zchee): only supports github driver for now.",
                "properties": {
                  "driver": {
                    "description": "Driver is the determines which git-api protocol to use.",
                    "enum": [
                      "github"
                    ],
                    "type": "string"
                  },
                  "forks": {
                    "description": "Fork is used to filter out forks from the target PRs if false, or to include forks if true.",
                    "type": "boolean"
                  },
                  "ignoreLabels": {
                    "description": "IgnoreLabels is used to filter PRs to exclude.",
                    "items": {
                      "description": "String represents textual data as UTF-8 character sequences.\nThis type is most often used by GraphQL to represent free-form\nhuman-readable text.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "interval": {
                    "default": "5m",
                    "description": "Interval is the interval at which to check for repository updates.",
                    "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
                    "type": "string"
                  },
                  "labels": {
                    "description": "Labels are used to filter the PRs they want to target. This may apply to the server.",
                    "items": {
                      "description": "String represents textual data as UTF-8 character sequences.\nThis type is most often used by GraphQL to represent free-form\nhuman-readable text.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "repo": {
                    "description": "Repo should be the Repo you want to query. e.g. my-org/my-repo.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "SecretRef is the reference to Secret in same namespace with a field “password” which is an auth token that can query the Git Provider API.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  },
                  "serverURL": {
                    "description": "ServerURL is the API endpoint to use.",
                    "type": "string"
                  }
                },
                "required": [
                  "driver",
                  "labels",
                  "repo"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "interval": {
          "default": "5m",
          "description": "The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nDefaults to 5 minites duration.",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
          "type": "string"
        },
        "kubeConfig": {
          "description": "The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the --default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\nis empty.",
          "properties": {
            "secretRef": {
              "description": "SecretRef holds the name of a secret that contains a key with\nthe kubeconfig file as the value. If no key is set, the key will default\nto 'value'.\nIt is recommended that the kubeconfig is self-contained, and the secret\nis regularly updated if credentials such as a cloud-access-token expire.\nCloud specific `cmd-path` auth helpers will not function without adding\nbinaries and credentials to the Pod that is responsible for reconciling\nKubernetes resources.",
              "properties": {
                "key": {
                  "description": "Key in the Secret, when not specified an implementation-specific default key is used.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the Secret.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          },
          "required": [
            "secretRef"
          ],
          "type": "object"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the Kubernetes service account to impersonate when reconciling this Kustomization.",
          "type": "string"
        },
        "suspend": {
          "default": false,
          "description": "Suspend tells the controller to suspend the reconciliation of this GitOpsSet.",
          "type": "boolean"
        },
        "templates": {
          "description": "Templates are a set of YAML templates that are rendered into resources from the data supplied by the generators.",
          "items": {
            "description": "GitOpsSetTemplate describes a resource to create.",
            "properties": {
              "content": {
                "description": "Content is the YAML to be templated and generated.",
                "properties": {
                  "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "enum": [
                      "source.toolkit.fluxcd.io/v1",
                      "source.toolkit.fluxcd.io/v1beta2",
                      "kustomize.toolkit.fluxcd.io/v1",
                      "helm.toolkit.fluxcd.io/v2beta2",
                      "notification.toolkit.fluxcd.io/v1",
                      "notification.toolkit.fluxcd.io/v1beta3",
                      "image.toolkit.fluxcd.io/v1beta1",
                      "image.toolkit.fluxcd.io/v1beta2"
                    ],
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "enum": [
                      "GitRepository",
                      "Bucket",
                      "HelmChart",
                      "HelmRepository",
                      "OCIRepository",
                      "Kustomization",
                      "HelmRelease",
                      "Receiver",
                      "Alert",
                      "Provider",
                      "ImageUpdateAutomation",
                      "ImagePolicy",
                      "ImageRepository"
                    ],
                    "type": "string"
                  },
                  "metadata": {
                    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.\n\n\nObjectMeta is equivalent to [metav1.ObjectMeta].",
                    "properties": {
                      "annotations": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                        "type": "object"
                      },
                      "creationTimestamp": {
                        "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletionGracePeriodSeconds": {
                        "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "deletionTimestamp": {
                        "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                        "format": "date-time",
                        "type": "string"
                      },
                      "finalizers": {
                        "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "generateName": {
                        "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                        "type": "string"
                      },
                      "generation": {
                        "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "labels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                        "type": "object"
                      },
                      "managedFields": {
                        "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.",
                        "items": {
                          "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                              "type": "string"
                            },
                            "fieldsType": {
                              "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                              "type": "string"
                            },
                            "fieldsV1": {
                              "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                              "type": "object"
                            },
                            "manager": {
                              "description": "Manager is an identifier of the workflow managing these fields.",
                              "type": "string"
                            },
                            "operation": {
                              "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                              "type": "string"
                            },
                            "subresource": {
                              "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                              "type": "string"
                            },
                            "time": {
                              "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.",
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                        "type": "string"
                      },
                      "ownerReferences": {
                        "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
                        "items": {
                          "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "blockOwnerDeletion": {
                              "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                              "type": "boolean"
                            },
                            "controller": {
                              "description": "If true, this reference points to the managing controller.",
                              "type": "boolean"
                            },
                            "kind": {
                              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiVersion",
                            "kind",
                            "name",
                            "uid"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic"
                        },
                        "type": "array"
                      },
                      "resourceVersion": {
                        "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "spec": {
                    "description": "Spec defines the desired state of Flux Toolkit CRs.\nNOTE(zchee): We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a\nhard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field.\nRef: https://github.com/kubernetes-sigs/controller-tools/blob/v0.14.0/pkg/crd/known_types.go#L107-L112",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "required": [
                  "apiVersion",
                  "kind",
                  "spec"
                ],
                "type": "object",
                "x-kubernetes-validations": [
                  {
                    "message": "kind must be 'GitRepository' when apiVersion is set to 'source.toolkit.fluxcd.io/v1'",
                    "rule": "self.apiVersion == 'source.toolkit.fluxcd.io/v1' ? self.kind == 'GitRepository' : true"
                  },
                  {
                    "message": "kind must be one of ['Bucket', 'HelmChart', 'HelmRepository', 'OCIRepository'] when apiVersion is set to 'source.toolkit.fluxcd.io/v1beta2'",
                    "rule": "self.apiVersion == 'source.toolkit.fluxcd.io/v1beta2' ? self.kind in ['Bucket','HelmChart','HelmRepository','OCIRepository'] : true"
                  },
                  {
                    "message": "kind must be 'Kustomization' when apiVersion is set to 'kustomize.toolkit.fluxcd.io/v1'",
                    "rule": "self.apiVersion == 'kustomize.toolkit.fluxcd.io/v1' ? self.kind == 'Kustomization' : true"
                  },
                  {
                    "message": "kind must be 'HelmRelease' when apiVersion is set to 'helm.toolkit.fluxcd.io/v2beta2'",
                    "rule": "self.apiVersion == 'helm.toolkit.fluxcd.io/v2beta2' ? self.kind == 'HelmRelease' : true"
                  },
                  {
                    "message": "kind must be 'ImageUpdateAutomation' when apiVersion is set to 'image.toolkit.fluxcd.io/v1beta1'",
                    "rule": "self.apiVersion == 'image.toolkit.fluxcd.io/v1beta1' ? self.kind == 'ImageUpdateAutomation' : true"
                  },
                  {
                    "message": "kind must be one of ['ImagePolicy', 'ImageRepository'] when apiVersion is set to 'image.toolkit.fluxcd.io/v1beta2'",
                    "rule": "self.apiVersion == 'image.toolkit.fluxcd.io/v1beta2' ? self.kind in ['ImagePolicy','ImageRepository'] : true"
                  }
                ]
              },
              "repeat": {
                "description": "Repeat is a JSONPath string defining that the template content should be repeated for\neach of the matching elements in the [JSONPath expression](https://kubernetes.io/docs/reference/kubectl/jsonpath/).",
                "type": "string"
              }
            },
            "required": [
              "content"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "timeout": {
          "description": "Timeout for validation, apply and health checking operations.\nDefaults to 'Interval' duration.",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
          "type": "string"
        }
      },
      "required": [
        "generators",
        "templates"
      ],
      "type": "object"
    },
    "status": {
      "description": "Status defines the current state of GitOpsSet.",
      "properties": {
        "conditions": {
          "description": "Conditions represents the observations of a GitOpsSet's current state.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "inventory": {
          "description": "Inventory contains the list of Kubernetes resource object references that have been successfully applied.",
          "properties": {
            "entries": {
              "description": "Entries of Kubernetes resource object references.",
              "items": {
                "description": "ResourceRef contains the information necessary to locate a resource within a cluster.",
                "properties": {
                  "id": {
                    "description": "ID is the string representation of the Kubernetes resource object's metadata,\nin the format '\u003cnamespace\u003e_\u003cname\u003e_\u003cgroup\u003e_\u003ckind\u003e'.",
                    "type": "string"
                  },
                  "v": {
                    "description": "Version is the API version of the Kubernetes resource object's kind.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "v"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "entries"
          ],
          "type": "object"
        },
        "lastHandledReconcileAt": {
          "description": "LastHandledReconcileAt holds the value of the most recent\nreconcile request value, so a change of the annotation value\ncan be detected.",
          "type": "string"
        },
        "lastUpdate": {
          "description": "LastUpdate identifies when the last update to the phase of the GitOpsSet.",
          "format": "date-time",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the last observed generation of the GitRepository object.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
